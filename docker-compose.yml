# Docker Compose para la aplicación de gestión de reservas de vuelos

services:
  # --- FRONTEND ---
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "5000:5000"
    environment:
      - API_GATEWAY_URL=http://api-gateway:8000
    depends_on:
      - api-gateway

  # --- API GATEWAY ---
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - auth-service
      - vuelos-service
      - reservas-service
      - pagos-service

  # --- AUTENTICACIÓN ---
  auth-service:
    build: ./services/authentication
    container_name: auth-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://user:password@auth-db:5432/auth_db
    depends_on:
      - auth-db

  auth-db:
    image: postgres:latest
    container_name: auth-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=auth_db
    ports:
      - "5433:5432"
    volumes:
      - auth_data:/var/lib/postgresql/data
      - ./services/authentication/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  # --- VUELOS ---
  vuelos-service:
    build: ./services/vuelos-service
    container_name: vuelos-service
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://user:password@vuelos-db:5432/vuelos_db
    depends_on:
      - vuelos-db

  vuelos-db:
    image: postgres:latest
    container_name: vuelos-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=vuelos_db
    ports:
      - "5434:5432"
    volumes:
      - vuelos_data:/var/lib/postgresql/data
      - ./services/vuelos-service/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  # --- RESERVAS ---
  reservas-service:
    build: ./services/reservas-service
    container_name: reservas-service
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=mongodb://reservas-db:27017/reservas_db
    depends_on:
      - reservas-db

  reservas-db:
    image: mongo:latest
    container_name: reservas-db
    ports:
      - "27018:27017"
    volumes:
      - reservas_data:/data/db
      - ./services/reservas-service/init.js:/docker-entrypoint-initdb.d/init.js:ro

  # --- PAGOS ---
  pagos-service:
    build: ./services/pagos-service
    container_name: pagos-service
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=postgresql://user:password@pagos-db:5432/pagos_db
    depends_on:
      - pagos-db

  pagos-db:
    image: postgres:latest
    container_name: pagos-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=pagos_db
    ports:
      - "5435:5432"
    volumes:
      - pagos_data:/var/lib/postgresql/data
      - ./services/pagos-service/schema.sql:/docker-entrypoint-initdb.d/schema.sql

volumes:
  auth_data:
  vuelos_data:
  reservas_data:
  pagos_data:
